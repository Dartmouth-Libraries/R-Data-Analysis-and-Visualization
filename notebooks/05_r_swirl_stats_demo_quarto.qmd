---
title: "5"
format: html
editor: visual
---

## R and the Swirlstats library

R and the **SwirlStats** library, see [SwirlStats](https://swirlstats.com/ "SwirlStats"){.uri}.

#### 1. T-Test: Comparing the means of two groups (Automatic vs Manual Transmission)

```{r}

library(ggplot2)
library(dplyr)
library(tidyr)
library(car)

mtcars$am <- as.factor(mtcars$am)  # Convert 'am' to a factor
t_test_result <- t.test(mpg ~ am, data = mtcars)
t_test_result
```

```{r}
t_test_result$p.value

# Check significance
if (t_test_result$p.value < 0.05) {
  cat("Result: Statistically significant difference in mpg (p < 0.05).\n")
} else {
  cat("Result: No statistically significant difference in mpg (p ≥ 0.05).\n")
}
```

```{r}
# Plot the T-Test
ggplot(mtcars, aes(x = am, y = mpg)) +
  geom_boxplot() +
  labs(title = "Miles per Gallon by Transmission Type", x = "Transmission (0 = Automatic, 1 = Manual)", y = "Miles Per Gallon") +
  theme_minimal()
```

#### 2. ANOVA: Comparing means between more than two groups (Cylinders)

```{r}
anova_result <- aov(mpg ~ factor(cyl), data = mtcars)
anova_summary <- summary(anova_result)
anova_summary
```

```{r}

# Check significance
if (anova_summary[[1]][["Pr(>F)"]][1] < 0.05) {
  cat("Result: At least one group is statistically significant (p < 0.05).\n")
} else {
  cat("Result: No statistically significant differences between groups (p ≥ 0.05).\n")
}

cat("This test compares the mean miles per gallon (mpg) across different cylinder groups.\n")

```

```{r}
# Plot the ANOVA
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
  geom_boxplot() +
  labs(title = "Miles per Gallon by Cylinder Count", x = "Number of Cylinders", y = "Miles Per Gallon") +
  theme_minimal()
```

#### 3. Correlation: Correlation between horsepower and miles per gallon

```{r}
correlation_result <- cor.test(mtcars$hp, mtcars$mpg)
correlation_result
```

```{r}

# Print the Correlation result and explanation
print(correlation_result)
cat("\nCorrelation Result:\n")
cat("This test assesses the strength and direction of the association between horsepower (hp) and miles per gallon (mpg).\n")

# Check significance
if (correlation_result$p.value < 0.05) {
  cat("Result: Statistically significant correlation (p < 0.05).\n")
} else {
  cat("Result: No statistically significant correlation (p ≥ 0.05).\n")
}
```

```{r}
# Plot the correlation
ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point() +
  geom_smooth(method = 'lm', color = 'blue') +
  labs(title = "Correlation between Horsepower and Miles Per Gallon", x = "Horsepower", y = "Miles Per Gallon") +
  theme_minimal()
```

```{r}
# Load necessary libraries
library(ggplot2)

# Load the mtcars dataset
data(mtcars)

# Fit a linear model to predict mpg based on hp
model <- lm(mpg ~ hp, data = mtcars)

# Extract fit parameters from the model
fit_parameters <- summary(model)$coefficients

# Display the fit parameters
print("Fit Parameters:")
print(fit_parameters)

# Plot the correlation
ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point() +
  geom_smooth(method = 'lm', color = 'blue') +
  labs(title = "Correlation between Horsepower and Miles Per Gallon",
       x = "Horsepower",
       y = "Miles Per Gallon") +
  theme_minimal()
```

```{r}
# 4. Chi-Squared Test: Testing association between two categorical variables (Transmission and Cylinders)
chi_squared_result <- chisq.test(table(mtcars$am, mtcars$cyl))
chi_square_result
```

```{r}
# Print the Chi-Squared result and explanation
print(chi_squared_result)
cat("\nChi-Squared Test Result:\n")
cat("This test assesses whether there is an association between transmission type (automatic/manual) and the number of cylinders.\n")

# Check significance
if (chi_squared_result$p.value < 0.05) {
  cat("Result: Statistically significant association between variables (p < 0.05).\n")
} else {
  cat("Result: No statistically significant association between variables (p ≥ 0.05).\n")
}
```

#### Pairs plot for exploratory data analysis

```{r}
head(iris)

# Summary statistics
summary(iris)

# Check for missing values
sum(is.na(iris))

# Pair plot to visualize relationships between variables
pairs(iris[,1:4], col = iris$Species)
```

```{r}
# Visualize the distribution of Sepal.Length by Species
ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
  geom_boxplot() +
  labs(title = "Distribution of Sepal Length by Species",
       x = "Species", y = "Sepal Length")

```

```{r}

```

```{r}

```

```{r}















# Load necessary libraries
library(ggplot2)
library(dplyr)

####
# View the first few rows of the mtcars dataset
head(mtcars)

# Summary statistics
summary(mtcars)

# Check for missing values
sum(is.na(mtcars))

# Visualize the distribution of mpg (miles per gallon) by the number of cylinders
ggplot(mtcars, aes(x = as.factor(cyl), y = mpg, fill = as.factor(cyl))) +
  geom_boxplot() +
  labs(title = "Distribution of MPG by Number of Cylinders",
       x = "Number of Cylinders", y = "MPG")

# Scatter plot between horsepower (hp) and mpg
ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point() +
  labs(title = "Horsepower vs. MPG", x = "Horsepower", y = "MPG")



# T-test to compare MPG for cars with 4 and 6 cylinders
t_test_result <- t.test(mpg ~ as.factor(cyl), data = mtcars[mtcars$cyl %in% c(4, 6), ])
print(t_test_result)
# 2. T-Test (For the mtcars dataset)
#A t-test compares the means of two groups (e.g., cars with 4 cylinders vs. cars with 6 cylinders). The null hypothesis is that the means are equal.
# Welch Two Sample t-test

#data:  mpg by as.factor(cyl)
#t = 4.7191, df = 12.956, p-value = 0.0004048
#alternative hypothesis: true difference in means between group 4 and group 6 is not equal to 0
#95 percent confidence interval:
#  3.751376 10.090182
#sample estimates:
#  mean in group 4 mean in group 6 
#26.66364        19.74286 
# Thus, the test shows that it is likely that mean mpg of 4cyl is different than the mean mpg of 6 cyl


# Convert cyl (cylinders) and am (transmission: 0 = automatic, 1 = manual) to factors
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- as.factor(mtcars$am)

# Create a contingency table
contingency_table <- table(mtcars$cyl, mtcars$am)
print(contingency_table)

# Perform chi-square test
chi_square_result <- chisq.test(contingency_table)
print(chi_square_result)
# 3. Chi-Square Test (For the mtcars dataset)
# A chi-square test checks if there is a relationship between two categorical variables (e.g., number of cylinders and transmission type).

# Explanation of Results:
#Summary statistics: Provides an overview of each variable (e.g., mean, median, min, max).
#Visualizations: Boxplots and scatter plots help visualize the distribution and relationships between variables.
#T-Test: Tests whether the mean MPG of cars with 4 vs. 6 cylinders differs significantly.
#Chi-Square Test: Tests whether there's a significant relationship between the number of cylinders and transmission type.
#This code covers key EDA techniques, a basic t-test, and a chi-square test, making it ideal for an introductory R workshop.

#########

# assigning a variable (use <- or = to assign)
# note:  == is used for boolean / if-then.  2 == 3 would be false 
#           while 2 == 2 would be true 
x <-4
setwd('~/Downloads/r-workshop')
# once installed, invoke with the 'library' command
library(tidyverse)
# view the mtcars dataset
mtcars

# place the dataset into a new 'data frame' variable
mtcars_df <- mtcars

# get the first five rows of data 
head(mtcars)

# get the last five rows (often a simple way to check for errors or na's near the end of the dataset)
tail(mtcars)

# dim gets the rows and columns of the dataset (dim=dimension)
dim(mtcars)

# names gets the column names of the dataset 
names(mtcars)

# filter the dataset: show only cars with more than six(6) cylinders
mtcars[mtcars$cyl > 6,]

# place these rows into a new dataframe
big_engine_cars <- mtcars[mtcars$cyl > 6,]

# to add a column to a dataset or dataframe, 
# just use the $ notation and a new variable name
# and give it a value, in this case hp/wt 
mtcars$power_to_weight_ratio <- mtcars$hp / mtcars$wt 

mtcars$power_to_weight_ratio

# scatter plot mpg vs hp
plot(mtcars$hp, mtcars$mpg)

plot(mtcars$hp, mtcars$mpg, main = 'MPG vs HP',
     xlab = "Horsepower",
     ylab = "Miles per Gallon",
     col = "blue", pch=19)

mtcars_pw_df <- mtcars

# write a csv out to the working directory
write.csv(mtcars_pw_df, "mtcars-export-20250205_1031.csv")

# read a csv file (a tidy one, rows and columns) into R 
new_df <- read.csv("mtcars-export-20250205_1031.csv")

# create a histogram
hist(mtcars$mpg)

boxplot(mpg ~ hp, data=mtcars)

boxplot(mpg ~ cyl, data=mtcars)

cor(mtcars[,c("mpg","hp","wt","qsec")])
# cor values from -1 through 0 up to 1 

model <- lm(mpg ~ hp, data = mtcars)
model


plot(mtcars$hp, mtcars$mpg)
abline(model, col="red", lwd=2)

cars_4c <- mtcars[mtcars$cyl == 4, "mpg"]
cars_6c <- mtcars[mtcars$cyl == 6, "mpg"]
cars_4c

# t-test to compare means

t_test_result <- t.test(cars_4c, cars_6c)
t_test_result

p_value <- t_test_result$p.value
p_value

library(tidyverse)

ggplot(mtcars, aes(x = as.factor(cyl), y = mpg, fill = as.factor(cyl))) +
  geom_boxplot() +
  labs(title = "Distribution of MPG by Number of Cylinders",
       x = "Number of Cylinders", y = "MPG")




install.packages("swirlstats")
library(swirl)
# https://swirlstats.com/
```
